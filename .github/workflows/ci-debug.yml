name: CI Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - cicd-develop

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  LANG: en_US.UTF-8
  # base64 service account credentials
  GCS_SA_CREDENTIAL: ${{ secrets.GCS_SA_CREDENTIAL }}
  GCS_PROJECT_ID: ${{ secrets.GCS_PROJECT_ID }}
  GCS_BUCKET: ${{ secrets.GCS_BUCKET }}

jobs:
  prepare:
    runs-on: ubuntu-18.04
    outputs:
      current_branch: ${{ steps.current_branch.outputs.value }}
      commit_tag: ${{ steps.commit_tag.outputs.value }}
      version_tag: ${{ steps.version_tag.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Extract branch
        shell: bash
        id: current_branch
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "$GITHUB_REF" =~ refs/tags ]]; then
            raw=$(git branch -r --contains ${{ github.ref }})
            BRANCH=${raw/origin\/}
          fi
          echo "::set-output name=value::$BRANCH"

      - name: Get Git Commit Tag
        shell: bash
        id: commit_tag
        run: |
          COMMIT_HASH="$(echo $GITHUB_SHA | head -c7)"
          echo "::set-output name=value::$COMMIT_HASH"

      - name: Get version tag
        id: version_tag
        run: |
          [[ ! "$GITHUB_REF" =~ refs/tags ]] && exit
          echo "::set-output name=value::${GITHUB_REF#refs/tags/}"



  build-ios:
    needs:
      - prepare
    strategy:
      matrix: 
        include:
          - app_name: "Krystal: Develop"
            env: dev
            ota_key: DEV_OTA_URL
            bump_build: true
          # - app_name: "Krystal: Staging"
          #   env: stg
          #   ota_key: STG_OTA_URL
          #   bump_build: false
            
    runs-on: macos-11
    env:
      TMP_KEYCHAIN_NAME: "fastlane_tmp_keychain"
      # cetificate environment
      DISTRIBUTE_CERT_PATH: /Users/runner/privates/certificates/distribution.p12
      DISTRIBUTE_CERT_PASSWORD: ${{ secrets.DISTRIBUTE_CERT_PASSWORD }}
      DEVELOPMENT_CERT_PATH: /Users/runner/privates/certificates/devops_development.p12
      DEVELOPMENT_CERT_PASSWORD: ${{ secrets.DEVELOPMENT_CERT_PASSWORD }}
      # xcode project environment
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
      APPLE_CODE_SIGNING_ID: ${{ secrets.APPLE_CODE_SIGNING_ID }}
      # profiles
      DEV_PROFILE: ${{ secrets.DEV_PROFILE }}
      KRYSTAL_DEV_PROFILE: ${{ secrets.KRYSTAL_DEV_PROFILE }}
      AD_HOC_PROFILE: ${{ secrets.AD_HOC_PROFILE }}
      EXT_AD_HOC_PROFILE: ${{ secrets.EXT_AD_HOC_PROFILE }}
      KRYSTAL_PROD_PROFILE: ${{ secrets.KRYSTAL_PROD_PROFILE }}
      KRYSTAL_PROD_EXT_PROFILE: ${{ secrets.KRYSTAL_PROD_EXT_PROFILE }}
      # profile paths
      DEV_PROFILE_PATH: "/Users/runner/privates/profiles/${{ secrets.DEV_PROFILE }}.mobileprovision"
      KRYSTAL_DEV_PROFILE_PATH: "/Users/runner/privates/profiles/${{ secrets.KRYSTAL_DEV_PROFILE }}.mobileprovision"
      AD_HOC_PROFILE_PATH: "/Users/runner/privates/profiles/${{ secrets.AD_HOC_PROFILE }}.mobileprovision"
      EXT_AD_HOC_PROFILE_PATH: "/Users/runner/privates/profiles/${{ secrets.EXT_AD_HOC_PROFILE }}.mobileprovision"
      KRYSTAL_PROD_PROFILE_PATH: "/Users/runner/privates/profiles/${{ secrets.KRYSTAL_PROD_PROFILE }}.mobileprovision"
      KRYSTAL_PROD_EXT_PROFILE_PATH: "/Users/runner/privates/profiles/${{ secrets.KRYSTAL_PROD_EXT_PROFILE }}.mobileprovision"
      # sentry environments
      SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
      ORG_SLUG: ${{ secrets.ORG_SLUG }}
      PROJECT_SLUG: ${{ secrets.PROJECT_SLUG }}
      SENTRY_URL: ${{ secrets.SENTRY_URL }}
      # default actor
      GH_ACTOR: kyber-ci-bot
      # GCP 
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2          

      - name: Setup Auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCS_SA_CREDENTIAL }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Get configuration items
        run: |
          mkdir -p /Users/runner/privates        
          gsutil -m cp -r gs://$GCS_BUCKET/ios/* /Users/runner/privates

      - name: Debug
        run: ls -al /Users/runner/privates
        
      - name: aaaa
        run: |
          gcloud config configurations list

      - name: Setup Auth 2
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCS_OTA_SA_CREDENTIAL }}'


      - name: Get configuration items
        run: |
          gsutil -m cp -r /Users/runner/privates/* gs://ota-storage/ios/
